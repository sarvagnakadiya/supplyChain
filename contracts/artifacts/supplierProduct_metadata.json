{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_spid",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "_name",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "_description",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "_unit",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "_price",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "_date",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "_expiryDate",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_timeAdded",
						"type": "uint256"
					}
				],
				"name": "eventAddSupplierProduct",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_spId",
						"type": "uint256"
					}
				],
				"name": "eventDeleteSupplierProduct",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_spId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "_quantity",
						"type": "uint128"
					}
				],
				"name": "eventUpdateSupplierProductUints",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_name",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "_description",
						"type": "bytes"
					},
					{
						"internalType": "uint128",
						"name": "_unit",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "_price",
						"type": "uint128"
					},
					{
						"internalType": "uint32",
						"name": "_date",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_expiryDate",
						"type": "uint32"
					}
				],
				"name": "addSupplierProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_spId",
						"type": "uint256"
					}
				],
				"name": "deleteSupplierProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_supplierAddress",
						"type": "address"
					}
				],
				"name": "getAllActiveProductsOfSupplier",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "supplierAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "sp_name",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "sp_description",
								"type": "bytes"
							},
							{
								"internalType": "uint128",
								"name": "sp_unit",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "sp_price",
								"type": "uint128"
							},
							{
								"internalType": "uint32",
								"name": "sp_date",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "sp_expiryDate",
								"type": "uint32"
							},
							{
								"internalType": "bool",
								"name": "sp_status",
								"type": "bool"
							}
						],
						"internalType": "struct ISupplierProduct.supplierProduct[]",
						"name": "",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_supplierAddress",
						"type": "address"
					}
				],
				"name": "getAllProductsOfSupplier",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "supplierAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "sp_name",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "sp_description",
								"type": "bytes"
							},
							{
								"internalType": "uint128",
								"name": "sp_unit",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "sp_price",
								"type": "uint128"
							},
							{
								"internalType": "uint32",
								"name": "sp_date",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "sp_expiryDate",
								"type": "uint32"
							},
							{
								"internalType": "bool",
								"name": "sp_status",
								"type": "bool"
							}
						],
						"internalType": "struct ISupplierProduct.supplierProduct[]",
						"name": "",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_productIds",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_spId",
						"type": "uint256"
					}
				],
				"name": "getSingleSupplierProduct",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "supplierAddress",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "sp_name",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "sp_description",
								"type": "bytes"
							},
							{
								"internalType": "uint128",
								"name": "sp_unit",
								"type": "uint128"
							},
							{
								"internalType": "uint128",
								"name": "sp_price",
								"type": "uint128"
							},
							{
								"internalType": "uint32",
								"name": "sp_date",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "sp_expiryDate",
								"type": "uint32"
							},
							{
								"internalType": "bool",
								"name": "sp_status",
								"type": "bool"
							}
						],
						"internalType": "struct ISupplierProduct.supplierProduct",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getSupplierProductIds",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "supplierAddressToproductsIdMapping",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "supplierProductsIdToStructMapping",
				"outputs": [
					{
						"internalType": "address",
						"name": "supplierAddress",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "sp_name",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "sp_description",
						"type": "bytes"
					},
					{
						"internalType": "uint128",
						"name": "sp_unit",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "sp_price",
						"type": "uint128"
					},
					{
						"internalType": "uint32",
						"name": "sp_date",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "sp_expiryDate",
						"type": "uint32"
					},
					{
						"internalType": "bool",
						"name": "sp_status",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_spId",
						"type": "uint256"
					},
					{
						"internalType": "uint128",
						"name": "_quantity",
						"type": "uint128"
					}
				],
				"name": "updateSupplierProductUints",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "ProvyLens team",
			"kind": "dev",
			"methods": {},
			"title": "The contract for handling supplier' product",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"addSupplierProduct(bytes,bytes,uint128,uint128,uint32,uint32)": {
					"notice": "function to add supplier product"
				},
				"deleteSupplierProduct(uint256)": {
					"notice": "function to delete supplier product (making the product Inactive)"
				},
				"getAllActiveProductsOfSupplier(address)": {
					"notice": "function to get all supplier products that it created on the platform(which are currently active)"
				},
				"getAllProductsOfSupplier(address)": {
					"notice": "function to get all supplier products that it created on the platform"
				},
				"getSingleSupplierProduct(uint256)": {
					"notice": "function to return supplier' single product"
				},
				"getSupplierProductIds()": {
					"notice": "function to return supplier product IDs"
				},
				"supplierAddressToproductsIdMapping(address,uint256)": {
					"notice": "mapping user' address with all the created products"
				},
				"supplierProductsIdToStructMapping(uint256)": {
					"notice": "mapping product index with supplierProduct struct"
				},
				"updateSupplierProductUints(uint256,uint128)": {
					"notice": "function to update supplier product units"
				}
			},
			"notice": "Uses ISupplierProduct interface",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/supplierProduct.sol": "supplierProduct"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Interfaces/ISupplierProduct.sol": {
			"keccak256": "0xcb23547d0e5b8c061aceac264cbd157ccea53f3e45749009b1a149b49058b9c6",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://f928813e20c8678aa86e572b31aa07a21cec068538f0eeb08818db6554045274",
				"dweb:/ipfs/QmWTwsAqz4jzoEHG7tjZrxR5j4C2p3doqVW9pWZhJjiouE"
			]
		},
		"contracts/supplierProduct.sol": {
			"keccak256": "0xf69129ca7910cd13a5d64052eb73bc5b11c495c0524619577922cf111bdb1bb7",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://798d7b5e3f576b41c490936e49072e5fc185836395a8826ccd733094c6bfa13a",
				"dweb:/ipfs/QmdVYZcyTsU6aPrbkz91PzyndNbHuHtXQQbWGpdgFupnce"
			]
		}
	},
	"version": 1
}