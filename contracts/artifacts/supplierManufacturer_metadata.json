{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_udAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_spAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "_arrivalTime",
						"type": "uint32"
					}
				],
				"name": "eventArrivalTime",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_smId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_spId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_supplierAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_manufacturerAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "_dispatchTime",
						"type": "uint32"
					}
				],
				"name": "eventSupplierManufacturerTransfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_ownerAddress",
						"type": "address"
					}
				],
				"name": "changeOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_spAddress",
						"type": "address"
					}
				],
				"name": "changeSpAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_udAddress",
						"type": "address"
					}
				],
				"name": "changeUdAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_manufacturerAddress",
						"type": "address"
					}
				],
				"name": "getAllSmIdForManufacturer",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "smId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "spId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "supplierAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "manufacturerAddress",
								"type": "address"
							},
							{
								"internalType": "uint32",
								"name": "dispatchTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "arrivalTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "quantity",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "currentQuantity",
								"type": "uint32"
							},
							{
								"internalType": "enum ISupplierManufacturer.transferStatus",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct ISupplierManufacturer.supplierManufacturer[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_manufacturerAddress",
						"type": "address"
					}
				],
				"name": "getAllSmIdForManufacturerWithproductDetails",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "smId",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "spId",
										"type": "uint256"
									},
									{
										"internalType": "address",
										"name": "supplierAddress",
										"type": "address"
									},
									{
										"internalType": "address",
										"name": "manufacturerAddress",
										"type": "address"
									},
									{
										"internalType": "uint32",
										"name": "dispatchTime",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "arrivalTime",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "quantity",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "currentQuantity",
										"type": "uint32"
									},
									{
										"internalType": "enum ISupplierManufacturer.transferStatus",
										"name": "status",
										"type": "uint8"
									}
								],
								"internalType": "struct ISupplierManufacturer.supplierManufacturer",
								"name": "smDetails",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "supplierAddress",
										"type": "address"
									},
									{
										"internalType": "bytes",
										"name": "sp_name",
										"type": "bytes"
									},
									{
										"internalType": "bytes",
										"name": "sp_description",
										"type": "bytes"
									},
									{
										"internalType": "uint128",
										"name": "sp_unit",
										"type": "uint128"
									},
									{
										"internalType": "uint128",
										"name": "sp_price",
										"type": "uint128"
									},
									{
										"internalType": "uint32",
										"name": "sp_date",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "sp_expiryDate",
										"type": "uint32"
									},
									{
										"internalType": "bool",
										"name": "sp_status",
										"type": "bool"
									}
								],
								"internalType": "struct ISupplierProduct.supplierProduct",
								"name": "spDetails",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum IUserDetails.userType",
										"name": "userType",
										"type": "uint8"
									},
									{
										"internalType": "bytes",
										"name": "userName",
										"type": "bytes"
									},
									{
										"internalType": "bytes",
										"name": "userPhysicalAddress",
										"type": "bytes"
									},
									{
										"internalType": "bytes",
										"name": "userImage",
										"type": "bytes"
									},
									{
										"internalType": "bool",
										"name": "userStatus",
										"type": "bool"
									}
								],
								"internalType": "struct IUserDetails.userDetails",
								"name": "uDetails",
								"type": "tuple"
							}
						],
						"internalType": "struct supplierManufacturer.supplierManufacturerWithProduct[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_supplierAddress",
						"type": "address"
					}
				],
				"name": "getAllSmIdForSupplier",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "smId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "spId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "supplierAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "manufacturerAddress",
								"type": "address"
							},
							{
								"internalType": "uint32",
								"name": "dispatchTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "arrivalTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "quantity",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "currentQuantity",
								"type": "uint32"
							},
							{
								"internalType": "enum ISupplierManufacturer.transferStatus",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct ISupplierManufacturer.supplierManufacturer[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_supplierAddress",
						"type": "address"
					}
				],
				"name": "getAllSmIdForSupplierWithproductDetails",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "smId",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "spId",
										"type": "uint256"
									},
									{
										"internalType": "address",
										"name": "supplierAddress",
										"type": "address"
									},
									{
										"internalType": "address",
										"name": "manufacturerAddress",
										"type": "address"
									},
									{
										"internalType": "uint32",
										"name": "dispatchTime",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "arrivalTime",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "quantity",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "currentQuantity",
										"type": "uint32"
									},
									{
										"internalType": "enum ISupplierManufacturer.transferStatus",
										"name": "status",
										"type": "uint8"
									}
								],
								"internalType": "struct ISupplierManufacturer.supplierManufacturer",
								"name": "smDetails",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "supplierAddress",
										"type": "address"
									},
									{
										"internalType": "bytes",
										"name": "sp_name",
										"type": "bytes"
									},
									{
										"internalType": "bytes",
										"name": "sp_description",
										"type": "bytes"
									},
									{
										"internalType": "uint128",
										"name": "sp_unit",
										"type": "uint128"
									},
									{
										"internalType": "uint128",
										"name": "sp_price",
										"type": "uint128"
									},
									{
										"internalType": "uint32",
										"name": "sp_date",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "sp_expiryDate",
										"type": "uint32"
									},
									{
										"internalType": "bool",
										"name": "sp_status",
										"type": "bool"
									}
								],
								"internalType": "struct ISupplierProduct.supplierProduct",
								"name": "spDetails",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum IUserDetails.userType",
										"name": "userType",
										"type": "uint8"
									},
									{
										"internalType": "bytes",
										"name": "userName",
										"type": "bytes"
									},
									{
										"internalType": "bytes",
										"name": "userPhysicalAddress",
										"type": "bytes"
									},
									{
										"internalType": "bytes",
										"name": "userImage",
										"type": "bytes"
									},
									{
										"internalType": "bool",
										"name": "userStatus",
										"type": "bool"
									}
								],
								"internalType": "struct IUserDetails.userDetails",
								"name": "uDetails",
								"type": "tuple"
							}
						],
						"internalType": "struct supplierManufacturer.supplierManufacturerWithProduct[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_smIdData",
						"type": "uint256[]"
					}
				],
				"name": "getAllSmIdForSupplierWithproductDetailsWithId",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "smId",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "spId",
										"type": "uint256"
									},
									{
										"internalType": "address",
										"name": "supplierAddress",
										"type": "address"
									},
									{
										"internalType": "address",
										"name": "manufacturerAddress",
										"type": "address"
									},
									{
										"internalType": "uint32",
										"name": "dispatchTime",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "arrivalTime",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "quantity",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "currentQuantity",
										"type": "uint32"
									},
									{
										"internalType": "enum ISupplierManufacturer.transferStatus",
										"name": "status",
										"type": "uint8"
									}
								],
								"internalType": "struct ISupplierManufacturer.supplierManufacturer",
								"name": "smDetails",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "supplierAddress",
										"type": "address"
									},
									{
										"internalType": "bytes",
										"name": "sp_name",
										"type": "bytes"
									},
									{
										"internalType": "bytes",
										"name": "sp_description",
										"type": "bytes"
									},
									{
										"internalType": "uint128",
										"name": "sp_unit",
										"type": "uint128"
									},
									{
										"internalType": "uint128",
										"name": "sp_price",
										"type": "uint128"
									},
									{
										"internalType": "uint32",
										"name": "sp_date",
										"type": "uint32"
									},
									{
										"internalType": "uint32",
										"name": "sp_expiryDate",
										"type": "uint32"
									},
									{
										"internalType": "bool",
										"name": "sp_status",
										"type": "bool"
									}
								],
								"internalType": "struct ISupplierProduct.supplierProduct",
								"name": "spDetails",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "enum IUserDetails.userType",
										"name": "userType",
										"type": "uint8"
									},
									{
										"internalType": "bytes",
										"name": "userName",
										"type": "bytes"
									},
									{
										"internalType": "bytes",
										"name": "userPhysicalAddress",
										"type": "bytes"
									},
									{
										"internalType": "bytes",
										"name": "userImage",
										"type": "bytes"
									},
									{
										"internalType": "bool",
										"name": "userStatus",
										"type": "bool"
									}
								],
								"internalType": "struct IUserDetails.userDetails",
								"name": "uDetails",
								"type": "tuple"
							}
						],
						"internalType": "struct supplierManufacturer.supplierManufacturerWithProduct[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllSupplierAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_smId",
						"type": "uint256"
					}
				],
				"name": "getSmDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "smId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "spId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "supplierAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "manufacturerAddress",
								"type": "address"
							},
							{
								"internalType": "uint32",
								"name": "dispatchTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "arrivalTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "quantity",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "currentQuantity",
								"type": "uint32"
							},
							{
								"internalType": "enum ISupplierManufacturer.transferStatus",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct ISupplierManufacturer.supplierManufacturer",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "manufacturerTosmIdMapping",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_smId",
						"type": "uint256"
					}
				],
				"name": "receiveProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reqId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_spId",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "_quantity",
						"type": "uint32"
					},
					{
						"internalType": "address",
						"name": "_supplierAddress",
						"type": "address"
					}
				],
				"name": "requestProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "smId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "smIdToStructMapping",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "smId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "spId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "supplierAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "manufacturerAddress",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "dispatchTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "arrivalTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "quantity",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "currentQuantity",
						"type": "uint32"
					},
					{
						"internalType": "enum ISupplierManufacturer.transferStatus",
						"name": "status",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "supplierTosmIdMapping",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_smId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_manufacturerAddress",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_quantity",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_currentQuantity",
						"type": "uint32"
					}
				],
				"name": "transferProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"changeOwner(address)": {
					"params": {
						"_ownerAddress": "The new owner's address"
					}
				},
				"changeSpAddress(address)": {
					"params": {
						"_spAddress": "The new supplierProduct contract address"
					}
				},
				"changeUdAddress(address)": {
					"params": {
						"_udAddress": "The new userDetails contract address"
					}
				},
				"getAllSupplierAddresses()": {
					"returns": {
						"_0": "An array of all supplier addresses"
					}
				}
			},
			"stateVariables": {
				"manufacturerTosmIdMapping": {
					"details": "A mapping to associate manufacturer's address with the smId"
				},
				"smIdToStructMapping": {
					"details": "A mapping to associate smId with supplierManufacturer"
				},
				"supplierTosmIdMapping": {
					"details": "A mapping to associate supplier's address with the smId"
				}
			},
			"title": "The contract for handling transfer between supplier and manufacturer product",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"changeOwner(address)": {
					"notice": "Changes the contract owner"
				},
				"changeSpAddress(address)": {
					"notice": "Changes the address of the supplierProduct contract"
				},
				"changeUdAddress(address)": {
					"notice": "Changes the address of the userDetails contract"
				},
				"getAllSmIdForManufacturer(address)": {
					"notice": "function to get all trasnfers manufacturer has received"
				},
				"getAllSupplierAddresses()": {
					"notice": "Returns an array of all supplier addresses"
				},
				"getSmDetails(uint256)": {
					"notice": "function to get single product transfer information"
				},
				"receiveProduct(uint256)": {
					"notice": "function to update that the product has been received"
				},
				"transferProduct(uint256,address,uint32,uint32)": {
					"notice": "function to transfer product from supplier to manufacturer"
				}
			},
			"notice": "Uses ISupplierManufacturer interface",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/supplierManufacturer.sol": "supplierManufacturer"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Interfaces/ISupplierManufacturer.sol": {
			"keccak256": "0x8ce6d129e56dac297ada869d339f0c64decd6ab6ca64ab1487635f6daf5d6c2d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://4584b7c3a80a542a3b101cf03c2c659f14ea35b371368d040839ec3527319c89",
				"dweb:/ipfs/QmSguouEqFgnLLkAaPnSLT2nUMtCC8s9m9pjvszqwLcZ7j"
			]
		},
		"contracts/Interfaces/ISupplierProduct.sol": {
			"keccak256": "0x4f02d377b818f50e14585c45d926ba7def64639af26ddb346567176ef577342c",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://865fef00ad9237636ba15848e245d7190bcee054b33d96d3b3e7048caf841052",
				"dweb:/ipfs/QmUUGJUsVdaAPiWLaWH16VpJf9nTCYeUdXQUTU2DYeiFQs"
			]
		},
		"contracts/Interfaces/IUserDetails.sol": {
			"keccak256": "0x3341292461d44d7534575b8c7be033e0688ed6b555bc79071f39b2e2b3fbb855",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://595cb991961eff351b424554db7212532719bfb7240a6a02c86e78912ac7910d",
				"dweb:/ipfs/QmXTm27Xu6VfFWHngGy7on9ctJzAetmdRVwyKiXuHSB2R4"
			]
		},
		"contracts/supplierManufacturer.sol": {
			"keccak256": "0xd530e675f092ce83e177a5660f8a5a03e32f30e0f2d5858318cb555c134ecfb5",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://a3cfd6a4221bca94a882cb9e44ee577a975023ec9aa491cbb4ab6e502e2d781a",
				"dweb:/ipfs/QmW3BajNdNbUg4w4iFYyd7wKDdAUZsnFgtok9FYvWB3vKf"
			]
		},
		"contracts/supplierProduct.sol": {
			"keccak256": "0xc0d277762c198e2bbea60b16ded9cad167fedcd650aa0b433028a66c25fde3ac",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://c7d2069231b9dda5c232592dafe3b016ebd117e23f21db47b0a223a256179602",
				"dweb:/ipfs/QmRS8Pw4cS9RDZa7tdi7naE3XMrPxXgrQBKcDv9S2tRno3"
			]
		},
		"contracts/userDetails.sol": {
			"keccak256": "0x69a600f3b0735f9be50cf6bac7e84e2eede75b8763e9157cbc823553a9da1e3f",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://ff56b5a4f8acbfdb126591ba3ab51c2c43cf9a704ab16b56d64f3deda99e86d2",
				"dweb:/ipfs/QmWDAxL71ma4gZpSFvvH16EUUgYLGZaauyhTE5GmFJU6e3"
			]
		}
	},
	"version": 1
}