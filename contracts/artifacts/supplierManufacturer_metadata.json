{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_udAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_spAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "_arrivalTime",
						"type": "uint32"
					}
				],
				"name": "eventArrivalTime",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_smId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "_spId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_supplierAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_manufacturerAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "_dispatchTime",
						"type": "uint32"
					}
				],
				"name": "eventSupplierManufacturerTransfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_ownerAddress",
						"type": "address"
					}
				],
				"name": "changeOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_spAddress",
						"type": "address"
					}
				],
				"name": "changeSpAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_udAddress",
						"type": "address"
					}
				],
				"name": "changeUdAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_manufacturerAddress",
						"type": "address"
					}
				],
				"name": "getAllSmIdForManufacturer",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "smId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "spId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "supplierAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "manufacturerAddress",
								"type": "address"
							},
							{
								"internalType": "uint32",
								"name": "dispatchTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "arrivalTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "quantity",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "currentQuantity",
								"type": "uint32"
							},
							{
								"internalType": "enum ISupplierManufacturer.transferStatus",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct ISupplierManufacturer.supplierManufacturer[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_supplierAddress",
						"type": "address"
					}
				],
				"name": "getAllSmIdForSupplier",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "smId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "spId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "supplierAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "manufacturerAddress",
								"type": "address"
							},
							{
								"internalType": "uint32",
								"name": "dispatchTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "arrivalTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "quantity",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "currentQuantity",
								"type": "uint32"
							},
							{
								"internalType": "enum ISupplierManufacturer.transferStatus",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct ISupplierManufacturer.supplierManufacturer[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllSupplierAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_smId",
						"type": "uint256"
					}
				],
				"name": "getSmDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "smId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "spId",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "supplierAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "manufacturerAddress",
								"type": "address"
							},
							{
								"internalType": "uint32",
								"name": "dispatchTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "arrivalTime",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "quantity",
								"type": "uint32"
							},
							{
								"internalType": "uint32",
								"name": "currentQuantity",
								"type": "uint32"
							},
							{
								"internalType": "enum ISupplierManufacturer.transferStatus",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct ISupplierManufacturer.supplierManufacturer",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "manufacturerTosmIdMapping",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_smId",
						"type": "uint256"
					}
				],
				"name": "receiveProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "reqId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_spId",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "_quantity",
						"type": "uint32"
					},
					{
						"internalType": "address",
						"name": "_supplierAddress",
						"type": "address"
					}
				],
				"name": "requestProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "smId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "smIdToStructMapping",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "smId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "spId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "supplierAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "manufacturerAddress",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "dispatchTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "arrivalTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "quantity",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "currentQuantity",
						"type": "uint32"
					},
					{
						"internalType": "enum ISupplierManufacturer.transferStatus",
						"name": "status",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "supplierTosmIdMapping",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_smId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_manufacturerAddress",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_quantity",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_currentQuantity",
						"type": "uint32"
					}
				],
				"name": "transferProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"changeOwner(address)": {
					"params": {
						"_ownerAddress": "The new owner's address"
					}
				},
				"changeSpAddress(address)": {
					"params": {
						"_spAddress": "The new supplierProduct contract address"
					}
				},
				"changeUdAddress(address)": {
					"params": {
						"_udAddress": "The new userDetails contract address"
					}
				},
				"getAllSupplierAddresses()": {
					"returns": {
						"_0": "An array of all supplier addresses"
					}
				}
			},
			"stateVariables": {
				"manufacturerTosmIdMapping": {
					"details": "A mapping to associate manufacturer's address with the smId"
				},
				"smIdToStructMapping": {
					"details": "A mapping to associate smId with supplierManufacturer"
				},
				"supplierTosmIdMapping": {
					"details": "A mapping to associate supplier's address with the smId"
				}
			},
			"title": "The contract for handling transfer between supplier and manufacturer product",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"changeOwner(address)": {
					"notice": "Changes the contract owner"
				},
				"changeSpAddress(address)": {
					"notice": "Changes the address of the supplierProduct contract"
				},
				"changeUdAddress(address)": {
					"notice": "Changes the address of the userDetails contract"
				},
				"getAllSmIdForManufacturer(address)": {
					"notice": "function to get all trasnfers manufacturer has received"
				},
				"getAllSupplierAddresses()": {
					"notice": "Returns an array of all supplier addresses"
				},
				"getSmDetails(uint256)": {
					"notice": "function to get single product transfer information"
				},
				"receiveProduct(uint256)": {
					"notice": "function to update that the product has been received"
				},
				"transferProduct(uint256,address,uint32,uint32)": {
					"notice": "function to transfer product from supplier to manufacturer"
				}
			},
			"notice": "Uses ISupplierManufacturer interface",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/supplierManufacturer.sol": "supplierManufacturer"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Interfaces/ISupplierManufacturer.sol": {
			"keccak256": "0x8ce6d129e56dac297ada869d339f0c64decd6ab6ca64ab1487635f6daf5d6c2d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://4584b7c3a80a542a3b101cf03c2c659f14ea35b371368d040839ec3527319c89",
				"dweb:/ipfs/QmSguouEqFgnLLkAaPnSLT2nUMtCC8s9m9pjvszqwLcZ7j"
			]
		},
		"contracts/Interfaces/ISupplierProduct.sol": {
			"keccak256": "0xcb23547d0e5b8c061aceac264cbd157ccea53f3e45749009b1a149b49058b9c6",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://f928813e20c8678aa86e572b31aa07a21cec068538f0eeb08818db6554045274",
				"dweb:/ipfs/QmWTwsAqz4jzoEHG7tjZrxR5j4C2p3doqVW9pWZhJjiouE"
			]
		},
		"contracts/Interfaces/IUserDetails.sol": {
			"keccak256": "0x3341292461d44d7534575b8c7be033e0688ed6b555bc79071f39b2e2b3fbb855",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://595cb991961eff351b424554db7212532719bfb7240a6a02c86e78912ac7910d",
				"dweb:/ipfs/QmXTm27Xu6VfFWHngGy7on9ctJzAetmdRVwyKiXuHSB2R4"
			]
		},
		"contracts/supplierManufacturer.sol": {
			"keccak256": "0xc811f54c61677a096a849625efb50d766ac3a908daef247b3d1d122383fae867",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://28cd190979e787cc580f74602828976ef30261a480cbe550dc5aab227070552d",
				"dweb:/ipfs/QmbPLvgmhQt2uptanaktzPHVuTS1eo9WcrCXVSiTAf2zXQ"
			]
		},
		"contracts/supplierProduct.sol": {
			"keccak256": "0xf68b5d501d330eade056ff254aa0ac3bc2dfb004e0e60ac92453658e20ef5afd",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://a7cb75078f45b5b80746b5023ed1f5a3d68c1e78f072fc29c7765f71eec24060",
				"dweb:/ipfs/QmWn53y6uL8tCAaAiX9J3S8BHRrH1nrhLujPHn3qbhxHiT"
			]
		},
		"contracts/userDetails.sol": {
			"keccak256": "0x69a600f3b0735f9be50cf6bac7e84e2eede75b8763e9157cbc823553a9da1e3f",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://ff56b5a4f8acbfdb126591ba3ab51c2c43cf9a704ab16b56d64f3deda99e86d2",
				"dweb:/ipfs/QmWDAxL71ma4gZpSFvvH16EUUgYLGZaauyhTE5GmFJU6e3"
			]
		}
	},
	"version": 1
}