{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "eventDeleteUser",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "enum IUserDetails.userType",
						"name": "_type",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "_name",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "_physicalAddress",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "_image",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_timeUpdated",
						"type": "uint256"
					}
				],
				"name": "eventUserData",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "enum IUserDetails.userType",
						"name": "_type",
						"type": "uint8"
					},
					{
						"internalType": "bytes",
						"name": "_name",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "_physicalAddress",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "_image",
						"type": "bytes"
					}
				],
				"name": "addUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "deleteUser",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "distributors",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_image",
						"type": "bytes"
					}
				],
				"name": "editImage",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_name",
						"type": "bytes"
					}
				],
				"name": "editName",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "_physicalAddress",
						"type": "bytes"
					}
				],
				"name": "editPhysicalAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllDistributors",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum IUserDetails.userType",
								"name": "userType",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "userName",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userPhysicalAddress",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userImage",
								"type": "bytes"
							}
						],
						"internalType": "struct IUserDetails.userDetails[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllManufacturers",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum IUserDetails.userType",
								"name": "userType",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "userName",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userPhysicalAddress",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userImage",
								"type": "bytes"
							}
						],
						"internalType": "struct IUserDetails.userDetails[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllSuppliers",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum IUserDetails.userType",
								"name": "userType",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "userName",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userPhysicalAddress",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userImage",
								"type": "bytes"
							}
						],
						"internalType": "struct IUserDetails.userDetails[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllUsers",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum IUserDetails.userType",
								"name": "userType",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "userName",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userPhysicalAddress",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userImage",
								"type": "bytes"
							}
						],
						"internalType": "struct IUserDetails.userDetails[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "getSingleUser",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum IUserDetails.userType",
								"name": "userType",
								"type": "uint8"
							},
							{
								"internalType": "bytes",
								"name": "userName",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userPhysicalAddress",
								"type": "bytes"
							},
							{
								"internalType": "bytes",
								"name": "userImage",
								"type": "bytes"
							}
						],
						"internalType": "struct IUserDetails.userDetails",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "manufacturers",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "suppliers",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userDetailsMapping",
				"outputs": [
					{
						"internalType": "enum IUserDetails.userType",
						"name": "userType",
						"type": "uint8"
					},
					{
						"internalType": "bytes",
						"name": "userName",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "userPhysicalAddress",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "userImage",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "users",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/userDetails.sol": "userDetails"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Interfaces/IUserDetails.sol": {
			"keccak256": "0xb35917e24e3ddcaadf856dfcbeaa3d2924158e061cf54494e150a2047e65c422",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://64717b43d412a3a70c6e888f9aa337b9b13ef82512fb9c3201989580d1a32590",
				"dweb:/ipfs/QmeNUg6NDyxwrY9WcEqPqQpCZ3QjMXoKhM9rmPVJE6vcy2"
			]
		},
		"contracts/userDetails.sol": {
			"keccak256": "0x0b5ff213bec18c31dd83eed2ee6445870dcda9d2b02088579cfd1afd6b2cdbf1",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://b1350d5a0068f26aaf687b11de8fa2b3abfd02eb53e6f3f9a6b0b55de6696f6c",
				"dweb:/ipfs/QmQxqdG4kg9dGzyLq8ZfaeM6RMVTuvhqQcZ3sJj6Mm4Phc"
			]
		}
	},
	"version": 1
}